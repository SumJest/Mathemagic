name: Build APK and Create Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v1.1.1
      with:
        versionSpec: '5.x'
    - name: Use GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v1.1.1
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt' 
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Get version using git-semver
      id: version
      run: |
        VERSION=${{ steps.gitversion.outputs.semVer }}
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        
    - name: Grant execute permission to gradlew
      run: chmod +x ./gradlew
      
    - name: Build APK in debug mode
      run: ./gradlew assembleDebug

    - name: Archive APK and metadata
      run: |
        mkdir -p build-artifacts
        cp app/build/outputs/apk/debug/app-debug.apk build-artifacts/app-debug.apk
        echo "Version: $VERSION" > build-artifacts/version.txt
        echo "Git Commit: $(git rev-parse HEAD)" >> build-artifacts/version.txt
        echo "Build Time: $(date)" >> build-artifacts/version.txt

    - name: Upload APK and metadata as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: build-artifacts

    - name: Create GitHub release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ steps.gitversion.outputs.semVer }}
        tag_name: ${{ github.ref }}
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build-artifacts/app-debug.apk
        asset_name: mathemagic-${{ steps.gitversion.outputs.semVer }}.apk
        asset_content_type: application/vnd.android.package-archive